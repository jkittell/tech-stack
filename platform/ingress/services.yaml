apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: database-ingress
  namespace: database
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
  - hosts:
    - cratedb.jkittell.com
    - keydb.jkittell.com
    secretName: database-tls
  rules:
  - host: cratedb.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cratedb
            port:
              number: 4200
  - host: keydb.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keydb
            port:
              number: 6379
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: monitoring
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
  - hosts:
    - grafana.jkittell.com
    - prometheus.jkittell.com
    - loki.jkittell.com
    - tempo.jkittell.com
    secretName: monitoring-tls
  rules:
  - host: grafana.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
  - host: prometheus.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 9090
  - host: loki.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: loki
            port:
              number: 3100
  - host: tempo.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tempo
            port:
              number: 3100
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: search-ingress
  namespace: search
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
  - hosts:
    - search.jkittell.com
    secretName: search-tls
  rules:
  - host: search.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: searxng
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storage-ingress
  namespace: storage
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
  - hosts:
    - minio.jkittell.com
    secretName: storage-tls
  rules:
  - host: minio.jkittell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio
            port:
              number: 9000
      - path: /console
        pathType: Prefix
        backend:
          service:
            name: minio-console
            port:
              number: 9001
